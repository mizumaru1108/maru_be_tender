# Semgrep - https://www.notion.so/hendyirawan/How-To-Add-Semgrep-To-A-GitLab-Project-0c98345d99c24d64876eb53ae6ed27e9
# Hendy's note: disable Semgrep temporarily due to js dangerouslyset bug
# FIXME: re-enable when semgrep is fixed
.semgrep:
  image: returntocorp/semgrep-agent:v1
  script: semgrep-agent
  variables: {}
  rules:
    - if: $CI_MERGE_REQUEST_IID
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH

# sonarqube-check:
#   stage: build
#   image:
#     name: sonarsource/sonar-scanner-cli:latest
#     entrypoint: ['']
#   variables:
#     SONAR_USER_HOME: '${CI_PROJECT_DIR}/.sonar' # Defines the location of the analysis task cache
#     GIT_DEPTH: '0' # Tells git to fetch all the branches of the project, required by the analysis task
#   cache:
#     key: '${CI_JOB_NAME}'
#     paths:
#       - .sonar/cache
#   script:
#     - sonar-scanner
#   allow_failure: true
#   only:
#     - main # or the name of your main branch

# ------------------------------------- build ------------------------------------------

# Directly deploy to Cloudflare Pages, which saves time (and money) instead of dealing with artifacts

'build tmra-tender-pwa without deploy':
  stage: build
  needs: []
  cache:
    key:
      prefix: tmra-tender-pwa
      files:
        - yarn.lock
    paths:
      - .yarn/cache
      - .yarn/install-state.gz
      - apps/pwa/node_modules
  variables:
    APP_NAME: tmra-tender-pwa
    APP_ENV: dev
  environment:
    name: ${APP_NAME}-${APP_ENV}
    url: https://app-${APP_ENV}.daysofiman.com/
  script:
    - cd apps/pwa
    - npm pkg set installConfig.hoistingLimits=workspaces
    - yarn workspaces focus
    - REACT_APP_SERVICE_ENV="$APP_ENV" REACT_APP_SERVICE_VERSION="${CI_COMMIT_BRANCH}_${CI_COMMIT_SHORT_SHA}" yarn build
    - '[ -f "build/index.html" ] || { ls -F build/; echo "Error: Build was invalid. apps/pwa/build/index.html must exist after build!"; exit 1; }'
  rules:
    - if: '$CI_COMMIT_BRANCH == "main" && ($CI_PIPELINE_SOURCE == "push" || $CI_PIPELINE_SOURCE == "merge_request_event")'

'build tmra-tender-pwa then deploy to dev':
  stage: build
  needs: ['prepare version']
  cache:
    key:
      prefix: tmra-tender-pwa
      files:
        - yarn.lock
    paths:
      - .yarn/cache
      - .yarn/install-state.gz
      - apps/pwa/node_modules
  variables:
    APP_NAME: tmra-tender-pwa
    APP_ENV: dev
  environment:
    name: ${APP_NAME}-${APP_ENV}
    url: https://tender-app-${APP_ENV}.tmra.io/
  script:
    - cd apps/pwa
    - npm pkg set installConfig.hoistingLimits=workspaces
    - yarn workspaces focus
    - REACT_APP_SERVICE_ENV="$APP_ENV" REACT_APP_SERVICE_VERSION="$APP_VERSION" yarn build
    - '[ -f "build/index.html" ] || { ls -F build/; echo "Error: Build was invalid. apps/pwa/build/index.html must exist after build!"; exit 1; }'
    # Cloudflare Pages insists on `main` branch as Production; and unable to map custom domain except the Production branch
    - yarn dlx wrangler pages deploy build/ --project-name="${APP_NAME}-${APP_ENV}" --branch=main --commit-hash="$CI_COMMIT_SHORT_SHA" --commit-message="${CI_COMMIT_DESCRIPTION}" --commit-dirty=true
  rules:
    - if: '$CI_COMMIT_BRANCH == "stack/dev" && ($CI_PIPELINE_SOURCE == "push" || $CI_PIPELINE_SOURCE == "merge_request_event")'

'build tmra-tender-pwa then deploy to staging':
  stage: build
  needs: ['prepare version']
  cache:
    key:
      prefix: tmra-tender-pwa
      files:
        - yarn.lock
    paths:
      - .yarn/cache
      - .yarn/install-state.gz
      - apps/pwa/node_modules
  variables:
    APP_NAME: tmra-tender-pwa
    APP_ENV: staging
  environment:
    name: ${APP_NAME}-${APP_ENV}
    url: https://tender-app-${APP_ENV}.tmra.io/
  script:
    - cd apps/pwa
    - npm pkg set installConfig.hoistingLimits=workspaces
    - yarn workspaces focus
    - REACT_APP_SERVICE_ENV="$APP_ENV" REACT_APP_SERVICE_VERSION="$APP_VERSION" yarn build
    - '[ -f "build/index.html" ] || { ls -F build/; echo "Error: Build was invalid. apps/pwa/build/index.html must exist after build!"; exit 1; }'
    # Cloudflare Pages insists on `main` branch as Production; and unable to map custom domain except the Production branch
    - yarn dlx wrangler pages deploy build/ --project-name="${APP_NAME}-${APP_ENV}" --branch=main --commit-hash="$CI_COMMIT_SHORT_SHA" --commit-message="${CI_COMMIT_DESCRIPTION}" --commit-dirty=true
  rules:
    - if: '$CI_COMMIT_BRANCH == "stack/staging" && ($CI_PIPELINE_SOURCE == "push" || $CI_PIPELINE_SOURCE == "merge_request_event")'

'build tmra-tender-pwa then deploy to prod':
  stage: build
  needs: ['prepare version']
  cache:
    key:
      prefix: tmra-tender-pwa
      files:
        - yarn.lock
    paths:
      - .yarn/cache
      - .yarn/install-state.gz
      - apps/pwa/node_modules
  variables:
    APP_NAME: tmra-tender-pwa
    APP_ENV: prod
  environment:
    name: ${APP_NAME}-${APP_ENV}
    # url: https://app.tmra.io/
    url: https://gaith.hcharity.org/
  script:
    - cd apps/pwa
    - npm pkg set installConfig.hoistingLimits=workspaces
    - yarn workspaces focus
    - REACT_APP_SERVICE_ENV="$APP_ENV" REACT_APP_SERVICE_VERSION="$APP_VERSION" yarn build
    - '[ -f "build/index.html" ] || { ls -F build/; echo "Error: Build was invalid. apps/pwa/build/index.html must exist after build!"; exit 1; }'
    # Cloudflare Pages insists on `main` branch as Production; and unable to map custom domain except the Production branch
    - yarn dlx wrangler pages deploy build/ --project-name="${APP_NAME}-${APP_ENV}" --branch=main --commit-hash="$CI_COMMIT_SHORT_SHA" --commit-message="${CI_COMMIT_DESCRIPTION}" --commit-dirty=true
  rules:
    - if: '$CI_COMMIT_BRANCH == "stack/prod" && ($CI_PIPELINE_SOURCE == "push" || $CI_PIPELINE_SOURCE == "merge_request_event")'
