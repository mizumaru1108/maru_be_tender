# You can override the included template(s) by including variable overrides
# SAST customization: https://docs.gitlab.com/ee/user/application_security/sast/#customizing-the-sast-settings
# Secret Detection customization: https://docs.gitlab.com/ee/user/application_security/secret_detection/#customizing-settings
# Dependency Scanning customization: https://docs.gitlab.com/ee/user/application_security/dependency_scanning/#customizing-the-dependency-scanning-settings
# Note that environment variables can be set in several places
# See https://docs.gitlab.com/ee/ci/variables/#cicd-variable-precedence
stages:
  - build
  - test
  - publish
  - deploy

image: node:lts-slim

# Cache modules in between jobs
cache:
  key: $CI_COMMIT_REF_SLUG
  paths:
    - $HOME/.npm/
    - node_modules/
    - .yarn/cache/
    - .next/cache/

sonarqube-check:
  stage: build
  image: 
    name: sonarsource/sonar-scanner-cli:latest
    entrypoint: [""]
  variables:
    SONAR_USER_HOME: "${CI_PROJECT_DIR}/.sonar"  # Defines the location of the analysis task cache
    GIT_DEPTH: "0"  # Tells git to fetch all the branches of the project, required by the analysis task
  cache:
    key: "${CI_JOB_NAME}"
    paths:
      - .sonar/cache
  script: 
    - sonar-scanner
  allow_failure: true
  only:
    - main # or the name of your main branch

.dev_rules:
  rules:
    - if: '$CI_COMMIT_BRANCH == "stack/dev" && ($CI_PIPELINE_SOURCE == "push" || $CI_PIPELINE_SOURCE == "merge_request_event")'
      changes:
        - "packages/raise/**/*"
    # You can manually trigger the pipeline with BUILD_PACKAGE=tmra-raise
    - if: '$CI_COMMIT_BRANCH == "stack/dev" && $BUILD_PACKAGE == "tmra-raise"'

publish_raise_dev:
  stage: build
  image:
    name: gcr.io/kaniko-project/executor:debug
    entrypoint: [""]
  script:
    - export APP_VERSION=`date +%Y.%m.%d`-${CI_COMMIT_BRANCH/stack\//}_${CI_COMMIT_SHORT_SHA}
    - echo "APP_VERSION=$APP_VERSION" > build.env
    # see https://github.com/GoogleContainerTools/kaniko/issues/1227
    # https://docs.gitlab.com/ee/ci/docker/using_kaniko.html
    - mkdir -p /kaniko/.docker
    # Requires AWS_REGION, AWS_ACCESS_KEY_ID, and AWS_SECRET_ACCESS_KEY in https://gitlab.com/lovia/lovia-billing/-/settings/ci_cd > Variables
    # - echo "{\"credHelpers\":{\"${DOCKER_REGISTRY}\":\"ecr-login\"}, \"auths\":{\"${CI_REGISTRY}\":{\"auth\":\"$(printf "%s:%s" "${CI_REGISTRY_USER}" "${CI_REGISTRY_PASSWORD}" | base64 | tr -d '\n')\"}}}" > /kaniko/.docker/config.json
    - echo "{\"auths\":{\"${CI_REGISTRY}\":{\"auth\":\"$(printf "%s:%s" "${CI_REGISTRY_USER}" "${CI_REGISTRY_PASSWORD}" | base64 | tr -d '\n')\"}}}" > /kaniko/.docker/config.json
    - >-
      /kaniko/executor
      --cache=true --cache-repo="${CI_REGISTRY_IMAGE}"
      --context "${CI_PROJECT_DIR}"
      --dockerfile "${CI_PROJECT_DIR}/packages/raise/Dockerfile"
      --build-arg=APP_VERSION="${APP_VERSION}"
      --destination "${CI_REGISTRY_IMAGE}/tmra-raise:${APP_VERSION}"
      --destination "${CI_REGISTRY_IMAGE}/tmra-raise:dev"
  #      --destination "$DOCKER_REGISTRY/$APP_NAME:$CI_COMMIT_SHA"
  #      --destination "$DOCKER_REGISTRY/$APP_NAME:staging"
  artifacts:
    reports:
      dotenv: build.env
  rules:
    - !reference [.dev_rules, rules]

deploy_raise_dev:
  stage: deploy
  trigger: tamrah/tmra-devops
  variables:
    APP_ENV: dev
    BUILD_PACKAGE: tmra-raise
  rules:
    - !reference [.dev_rules, rules]

.staging_rules:
  rules:
    - if: '$CI_COMMIT_BRANCH == "stack/staging" && ($CI_PIPELINE_SOURCE == "push" || $CI_PIPELINE_SOURCE == "merge_request_event")'
      changes:
        - "packages/raise/**/*"
    # You can manually trigger the pipeline with BUILD_PACKAGE=tmra-raise
    - if: '$CI_COMMIT_BRANCH == "stack/staging" && $BUILD_PACKAGE == "tmra-raise"'

publish_raise_staging:
  stage: build
  image:
    name: gcr.io/kaniko-project/executor:debug
    entrypoint: [""]
  script:
    - export APP_VERSION=`date +%Y.%m.%d`-${CI_COMMIT_BRANCH/stack\//}_${CI_COMMIT_SHORT_SHA}
    - echo "APP_VERSION=$APP_VERSION" > build.env
    # see https://github.com/GoogleContainerTools/kaniko/issues/1227
    # https://docs.gitlab.com/ee/ci/docker/using_kaniko.html
    - mkdir -p /kaniko/.docker
    # Requires AWS_REGION, AWS_ACCESS_KEY_ID, and AWS_SECRET_ACCESS_KEY in https://gitlab.com/lovia/lovia-billing/-/settings/ci_cd > Variables
    # - echo "{\"credHelpers\":{\"${DOCKER_REGISTRY}\":\"ecr-login\"}, \"auths\":{\"${CI_REGISTRY}\":{\"auth\":\"$(printf "%s:%s" "${CI_REGISTRY_USER}" "${CI_REGISTRY_PASSWORD}" | base64 | tr -d '\n')\"}}}" > /kaniko/.docker/config.json
    - echo "{\"auths\":{\"${CI_REGISTRY}\":{\"auth\":\"$(printf "%s:%s" "${CI_REGISTRY_USER}" "${CI_REGISTRY_PASSWORD}" | base64 | tr -d '\n')\"}}}" > /kaniko/.docker/config.json
    - >-
      /kaniko/executor
      --cache=true --cache-repo="${CI_REGISTRY_IMAGE}"
      --context "${CI_PROJECT_DIR}"
      --dockerfile "${CI_PROJECT_DIR}/packages/raise/Dockerfile"
      --build-arg=APP_VERSION="${APP_VERSION}"
      --destination "${CI_REGISTRY_IMAGE}/tmra-raise:${APP_VERSION}"
      --destination "${CI_REGISTRY_IMAGE}/tmra-raise:staging"
  #      --destination "$DOCKER_REGISTRY/$APP_NAME:$CI_COMMIT_SHA"
  #      --destination "$DOCKER_REGISTRY/$APP_NAME:staging"
  artifacts:
    reports:
      dotenv: build.env
  rules:
    - !reference [.staging_rules, rules]

deploy_raise_staging:
  stage: deploy
  trigger: tamrah/tmra-devops
  variables:
    APP_ENV: staging
    BUILD_PACKAGE: tmra-raise
  rules:
    - !reference [.staging_rules, rules]

.prod_rules:
  rules:
    - if: '$CI_COMMIT_BRANCH == "stack/prod" && ($CI_PIPELINE_SOURCE == "push" || $CI_PIPELINE_SOURCE == "merge_request_event")'
      changes:
        - "packages/raise/**/*"
    # You can manually trigger the pipeline with BUILD_PACKAGE=tmra-raise
    - if: '$CI_COMMIT_BRANCH == "stack/prod" && $BUILD_PACKAGE == "tmra-raise"'

publish_raise_latest:
  stage: build
  image:
    name: gcr.io/kaniko-project/executor:debug
    entrypoint: [""]
  script:
    - export APP_VERSION=`date +%Y.%m.%d`-${CI_COMMIT_BRANCH/stack\//}_${CI_COMMIT_SHORT_SHA}
    - echo "APP_VERSION=$APP_VERSION" > build.env
    # see https://github.com/GoogleContainerTools/kaniko/issues/1227
    # https://docs.gitlab.com/ee/ci/docker/using_kaniko.html
    - mkdir -p /kaniko/.docker
    # Requires AWS_REGION, AWS_ACCESS_KEY_ID, and AWS_SECRET_ACCESS_KEY in https://gitlab.com/lovia/lovia-billing/-/settings/ci_cd > Variables
    # - echo "{\"credHelpers\":{\"${DOCKER_REGISTRY}\":\"ecr-login\"}, \"auths\":{\"${CI_REGISTRY}\":{\"auth\":\"$(printf "%s:%s" "${CI_REGISTRY_USER}" "${CI_REGISTRY_PASSWORD}" | base64 | tr -d '\n')\"}}}" > /kaniko/.docker/config.json
    - echo "{\"auths\":{\"${CI_REGISTRY}\":{\"auth\":\"$(printf "%s:%s" "${CI_REGISTRY_USER}" "${CI_REGISTRY_PASSWORD}" | base64 | tr -d '\n')\"}}}" > /kaniko/.docker/config.json
    - >-
      /kaniko/executor
      --cache=true --cache-repo="${CI_REGISTRY_IMAGE}"
      --context "${CI_PROJECT_DIR}"
      --dockerfile "${CI_PROJECT_DIR}/packages/raise/Dockerfile"
      --build-arg=APP_VERSION="${APP_VERSION}"
      --destination "${CI_REGISTRY_IMAGE}/tmra-raise:${APP_VERSION}"
      --destination "${CI_REGISTRY_IMAGE}/tmra-raise:latest"
  #      --destination "$DOCKER_REGISTRY/$APP_NAME:$CI_COMMIT_SHA"
  #      --destination "$DOCKER_REGISTRY/$APP_NAME:staging"
  artifacts:
    reports:
      dotenv: build.env
  rules:
    - !reference [.prod_rules, rules]

deploy_raise_prod:
  stage: deploy
  trigger: tamrah/tmra-devops
  variables:
    APP_ENV: prod
    BUILD_PACKAGE: tmra-raise
  rules:
    - !reference [.prod_rules, rules]
